@model nclprospekt.Models.ZamowienieListaWO
@section scripts {
    <script src="@Url.Content("~/Scripts/custom-zamowienie.js")" type="text/javascript"></script>
    <script type="text/javascript">
        var settings = {
            "dom": '<"top"lf>rt<"row-fluid"<"span2 offset1"i><"span6 offset1"p>>',
            "language": {
                "sProcessing": "   ",
                "sLengthMenu": "Pozycji na stronę _MENU_ ",
                "sZeroRecords": "Nie znaleziono pasujących pozycji",
                "sInfoThousands": " ",
                "sInfo": "Pozycje od _START_ do _END_ z _TOTAL_ łącznie",
                "sInfoEmpty": "Pozycji 0 z 0 dostępnych",
                "sInfoFiltered": "(filtrowanie spośród _MAX_ dostępnych pozycji)",
                "sInfoPostFix": "",
                "sSearch": "Filtruj wynik:",
                "sUrl": "",
                "oPaginate": {
                    "sFirst": '<i class="fa fa-angle-double-left fa-2x"></i>',
                    "sPrevious": '<i class="fa fa-angle-left fa-2x"></i>',
                    "sNext": '<i class="fa fa-angle-right fa-2x"></i>',
                    "sLast": '<i class="fa fa-angle-double-right fa-2x"></i>'
                },
                "sEmptyTable": "Brak danych",
                "sLoadingRecords": "   ",
                "oAria": {
                    "sSortAscending": ": aktywuj, by posortować kolumnę rosnąco",
                    "sSortDescending": ": aktywuj, by posortować kolumnę malejąco"
                }
            },
            "aLengthMenu": [[10, 25, 50, 75], [10, 25, 50, 75]],
            "sPaginationType": "input",
            "stateSave": true,
            "scrollCollapse": true,
            bAutoWidth: false,
            "aoColumns": [
                { sWidth: '2%' }, //<th>Lp.</th>
                {     sWidth: '20%'         }, //<th>Html.DisplayNameFor(model => model.numer)</th>
                    {bVisible: false, aTarget: 1 }, //  <th style="display:none">Html.DisplayNameFor(model => model.koszyk)</th>

                    {
                    sWidth: '30%', "render": function (data)
                    { return '<span style="white-space:normal;overflow:hidden;text-overflow:ellipsis;">' + data + '</span>'; }
                }, //<th>Html.DisplayNameFor(model => model.zlecajacy)</th>

                    {sWidth: '7%' }, //<th>Html.DisplayNameFor(model => model.status)</th>

                    {
                    sWidth: '17%', "render": function (data)
                    { return '<span style="white-space:normal;overflow:hidden;text-overflow:ellipsis;">' + data + '</span>'; }
                },  // <th>Html.DisplayNameFor(model => model.typ)</th>

                 {sWidth: '12%', "defaultContent": "BRAK" }, //<th>Html.DisplayNameFor(model => model.data_zlozenia)</th>
                  { sWidth: '12%', "defaultContent": "BRAK" }, //<th>Html.DisplayNameFor(model => model.data_zlozenia)</th>
                {sWidth: '10%' }, //<th>Html.DisplayNameFor(model => model.uwagi)</th>

                {sWidth: '10%' }, // <th>Html.DisplayNameFor(model => model.list_przewozowy_nr)</th>

                {sWidth: '7%' }, // <th>Html.DisplayNameFor(model => model.status_przesyłki)</th>

                {sWidth: '7%'}], // <th>Html.DisplayNameFor(model => model.data_ostatniej_zmiany)</th>

            "fnInitComplete": function () {
                $('#zamowieniaDataTable').show();
            }

        };

        var settingsModal = ''; //Przygotowane dla modali i detali

        $(document).ready(
        function () {
            var extensions = {
                "sFilter": "dataTables_filter col-md-12",
                "sLength": "dataTables_length col-md-12",
                "sLengthMenu": "dataTables_length col-md-12",
            }
            // Used when bJQueryUI is false
            $.extend($.fn.dataTableExt.oStdClasses, extensions);
            // Used when bJQueryUI is true
            $.extend($.fn.dataTableExt.oJUIClasses, extensions);

            var t = $('#zamowieniaDataTable')
                .DataTable(settings);

            t.on('order.dt search.dt', function () {
                t.column(0, { search: 'applied', order: 'applied' }).nodes().each(function (cell, i) {
                    cell.innerHTML = i + 1;
                });
            }).draw();
        });


        $("body").on("click", "#btnPobierz", function () { $("#frmZamowienia").submit(); });


    </script>
}
@{
    ViewBag.Title = "Zamówienia";
}
<br />
<div id="zamowienieDetale">
</div>

<div class="panel panel-primary panel-block" id="listaZamowien">
    <div class="panel-heading">
        Zamówienia
    </div>
    <div class="panel-body">
        <div class="form-group">
            @*Przyciski*@
            <div class="row">

                            @using (Html.BeginForm("Index", "Zamowienie", FormMethod.Post, new { id = "frmZamowienia", name = "frmZamowienia"}))
                        {
                            @Html.AntiForgeryToken()
                                    <div class="col-xs-12 col-sm-3">
                                        <div class="form-inline">
                                        <label for="filtr">Szukaj</label>
                                        @Html.TextBox("filtr", "", new { @class = "input-sm form-control", type = "text", placeholder = "Szukaj zamówień..." })
                                    </div>
                                </div>
                                    <div class="col-xs-12 col-sm-3">
                                        <div class="form-inline">
                            <label for="DataOd">Data od</label>
                                        @if (ViewBag.dataOd != null)
                                        {
                                string strDataOd = Model.DataDo.ToString("yyyy-MM-dd");
                                @Html.TextBox("DataOd", String.Format("{0:d}", strDataOd), new { @class = "datepicker form-control", type = "date", data_date_format = "yyyy-MM-dd" })
                                        }
                                        else
                                        {
                                @Html.TextBox("DataOd", String.Format("{0:d}", DateTime.Now.ToString("yyyy-MM-dd")), new { @class = "datepicker form-control", type = "date", data_date_format = "yyyy-MM-dd" })
                                        }
                                    </div>
                                </div>
                                    <div class="col-xs-12 col-sm-3">
                                        <div class="form-inline">
                            <label for="DataDo">Data do</label>

                            @if (Model.DataDo != null)
                                        {
                                string strDataDo = Model.DataDo.ToString("yyyy-MM-dd");
                                @Html.TextBox("DataDo", String.Format("{0:d}", strDataDo), new { @class = "datepicker form-control", type = "date", data_date_format = "yyyy-MM-dd" })
                                        }
                                        else
                                        {
                                @Html.TextBox("DataDo", String.Format("{0:d}", DateTime.Now.ToString("yyyy-MM-dd")), new { @class = "datepicker form-control", type = "date", data_date_format = "yyyy-MM-dd" })
                                        }
                                    </div>
                                </div>
                    <div class="col-xs-12 col-sm-4">
                        <div class="form-inline">
                            <label for="zamowienieStatusLista">
                                Zamówienie status
                            </label>
                            @Html.DropDownListFor(model => model.zamowienieStatusID, new SelectList(Model.zamowienieStatusLista, "ZAMOWIENIE_STATUS_ID", "NAZWA"), new { @class = "form-control" })
                        </div>
                    </div>
                                <div class="col-xs-12 col-sm-3">
                                    <div class="form-group">
                                        <button id="btnPobierz" type="button" class="btn btn-lg btn-info btn-mobile">
                                            <i class="fa fa-search">&nbsp;&nbsp;</i> 
                                            Szukaj...
                                        </button>
                                    </div>
                                </div>

                        }
                    </div>

            @*Dane*@
            <div class="table-responsive">
                <table id="zamowieniaDataTable" class="table table-striped table-hover dt-responsive tableTextCenter"
                    cellspacing="0" style="display: none">
                    <thead>
                        <tr>
                            <th>Lp.</th>
                            <th>@Html.DisplayNameFor(model => model.zamowieniaLista.FirstOrDefault().numer)</th>
                            <th style="display:none">@Html.DisplayNameFor(model => model.zamowieniaLista.FirstOrDefault().koszyk)</th>
                            <th><span class="dlugi_tekst">@Html.DisplayNameFor(model => model.zamowieniaLista.FirstOrDefault().zlecajacy)</span></th>
                            <th><span class="dlugi_tekst">@Html.DisplayNameFor(model => model.zamowieniaLista.FirstOrDefault().status)</span></th>
                            <th><span class="dlugi_tekst">@Html.DisplayNameFor(model => model.zamowieniaLista.FirstOrDefault().typ)</span></th>
                            <th><span class="dlugi_tekst">@Html.DisplayNameFor(model => model.zamowieniaLista.FirstOrDefault().data_zlozenia)</span></th>
                            <th><span class="dlugi_tekst">@Html.DisplayNameFor(model => model.zamowieniaLista.FirstOrDefault().data_realizacji)</span></th>
                            <th><span class="dlugi_tekst">@Html.DisplayNameFor(model => model.zamowieniaLista.FirstOrDefault().uwagi)</span></th>
                            <th><span class="dlugi_tekst">@Html.DisplayNameFor(model => model.zamowieniaLista.FirstOrDefault().list_przewozowy_nr)</span></th>
                            <th><span class="dlugi_tekst">@Html.DisplayNameFor(model => model.zamowieniaLista.FirstOrDefault().status_przesylki)</span></th>
                            <th><span class="dlugi_tekst">@Html.DisplayNameFor(model => model.zamowieniaLista.FirstOrDefault().data_ostatniej_zmiany)</span></th>
                        </tr>
                    </thead>
                    @if (Model != null && Model.zamowieniaLista.Count() > 0)
                    {
                        <tbody>
                            @foreach (var item in Model.zamowieniaLista)
                            {
                                <tr data-link="id=@item.numer" class="handCursor">
                                    <td></td>
                                    <td>@Html.DisplayFor(modelitem => item.numer)</td>
                                    <td style="display: none">@Html.DisplayFor(modelitem => item.koszyk)</td>
                                    <td>@Html.DisplayFor(modelitem => item.zlecajacy)</td>
                                    <td>@Html.DisplayFor(modelitem => item.status)</td>
                                    <td>@Html.DisplayFor(modelitem => item.typ)</td>
                                    <td>@Html.DisplayFor(modelitem => item.data_zlozenia)</td>
                                    <td>@Html.DisplayFor(modelitem => item.data_realizacji)</td>
                                    <td>@Html.DisplayFor(modelitem => item.uwagi)</td>
                                    <td>@Html.DisplayFor(modelitem => item.list_przewozowy_nr)</td>
                                    <td>@Html.DisplayFor(modelitem => item.status_przesylki)</td>
                                    <td>@Html.DisplayFor(modelitem => item.data_ostatniej_zmiany)</td>
                                </tr>
                            }
                        </tbody>
                    }
                   
                </table>
            </div>
        </div>
    </div>



</div>
